kind: Service 
apiVersion: v1 
metadata:
  name: time-service-v1 
  labels:
    app: time-service
spec:
  # Expose the service on a static port on each node
  # so that we can access the service from outside the cluster 
  type: LoadBalancer

  # When the node receives a request on the static port (30163)
  # "select pods with the label 'name' set to 'xxx'"
  # and forward the request to one of them
  selector:
    app: time-service

  ports:
    # Three types of ports for a service
    # nodePort - a static port assigned on each the node
    # port - port exposed internally in the cluster
    # targetPort - the container port to send requests to
    - nodePort: 31360
      port: 3000 
      targetPort: 3000

---
# there is no need to define a Pod directly; it is implicitly created
# when Deployment is created, as defined below
# a definition file with 'kind: Pod' is almost never needed in real applications 
kind: Deployment
apiVersion: apps/v1
metadata:
  name: time-deployment-v1
  labels: 
    app: time-service
spec:
  # A deployment's specification really only 
  # has a few useful options
  
  # 1. How many copies of each pod do we want?
  replicas: 2

  # 2. How do want to update the pods?
  #strategy: Recreate

  # 3. Which pods are managed by this deployment?
  selector:
    # This must match the labels we set on the pod!
    matchLabels:
      app: time-service
  
  # This template field is a regular pod configuration 
  # nested inside the deployment spec
  template:
    metadata:
      # Set labels on the pod.
      # This is used in the deployment selector.
      labels:
        app: time-service
    spec:
      containers:
        - name: time
          image: time:v1
          ports:
            - containerPort: 3000
              protocol: TCP
